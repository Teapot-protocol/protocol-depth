       IDENTIFICATION DIVISION.
       PROGRAM-ID. FILE-OPERATIONS.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE
               ASSIGN TO DYNAMIC WS-INPUT-FILENAME
               ORGANIZATION IS LINE SEQUENTIAL
               FILE STATUS IS WS-FILE-STATUS.
           SELECT OUTPUT-FILE
               ASSIGN TO DYNAMIC WS-OUTPUT-FILENAME
               ORGANIZATION IS LINE SEQUENTIAL
               FILE STATUS IS WS-FILE-STATUS.
           SELECT INDEXED-FILE
               ASSIGN TO DYNAMIC WS-INDEXED-FILENAME
               ORGANIZATION IS INDEXED
               ACCESS MODE IS DYNAMIC
               RECORD KEY IS IDX-RECORD-KEY
               FILE STATUS IS WS-FILE-STATUS.

       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE
           RECORD VARYING FROM 1 TO 1000 DEPENDING ON WS-RECORD-LEN.
       01 INPUT-RECORD    PIC X(1000).

       FD OUTPUT-FILE.
       01 OUTPUT-RECORD   PIC X(1000).

       FD INDEXED-FILE.
       01 INDEXED-RECORD.
           05 IDX-RECORD-KEY  PIC X(10).
           05 IDX-DATA        PIC X(990).

       WORKING-STORAGE SECTION.
       01 WS-FILE-INFO.
           05 WS-INPUT-FILENAME   PIC X(100).
           05 WS-OUTPUT-FILENAME  PIC X(100).
           05 WS-INDEXED-FILENAME PIC X(100).
           05 WS-FILE-STATUS     PIC X(2).
           05 WS-RECORD-LEN      PIC 9(4).
           05 WS-EOF-FLAG        PIC X VALUE 'N'.
              88 END-OF-FILE     VALUE 'Y'.

       01 WS-COUNTERS.
           05 WS-READ-COUNT      PIC 9(6) VALUE 0.
           05 WS-WRITE-COUNT     PIC 9(6) VALUE 0.
           05 WS-ERROR-COUNT     PIC 9(6) VALUE 0.

       01 WS-BUFFER.
           05 WS-BUFFER-DATA     PIC X(1000).
           05 WS-BUFFER-LEN      PIC 9(4).

       LINKAGE SECTION.
       01 LS-OPERATION          PIC 9.
          88 OP-READ-SEQUENTIAL VALUE 1.
          88 OP-WRITE-SEQ      VALUE 2.
          88 OP-READ-INDEXED   VALUE 3.
          88 OP-WRITE-INDEXED  VALUE 4.
       01 LS-FILENAME          PIC X(100).
       01 LS-RECORD-BUFFER.
           05 LS-BUFFER-LEN    PIC 9(4).
           05 LS-BUFFER-DATA   PIC X(1000).

       PROCEDURE DIVISION USING LS-OPERATION LS-FILENAME 
                              LS-RECORD-BUFFER.
       MAIN-PROCEDURE.
           EVALUATE TRUE
               WHEN OP-READ-SEQUENTIAL
                   PERFORM READ-SEQUENTIAL-FILE
               WHEN OP-WRITE-SEQ
                   PERFORM WRITE-SEQUENTIAL-FILE
               WHEN OP-READ-INDEXED
                   PERFORM READ-INDEXED-FILE
               WHEN OP-WRITE-INDEXED
                   PERFORM WRITE-INDEXED-FILE
           END-EVALUATE
           GOBACK.

       READ-SEQUENTIAL-FILE.
           MOVE LS-FILENAME TO WS-INPUT-FILENAME
           PERFORM OPEN-INPUT-FILE
           PERFORM UNTIL END-OF-FILE
               READ INPUT-FILE
                   AT END SET END-OF-FILE TO TRUE
                   NOT AT END
                       ADD 1 TO WS-READ-COUNT
                       MOVE INPUT-RECORD TO WS-BUFFER-DATA
                       MOVE WS-RECORD-LEN TO WS-BUFFER-LEN
                       PERFORM PROCESS-RECORD
               END-READ
           END-PERFORM
           PERFORM CLOSE-FILES.

       WRITE-SEQUENTIAL-FILE.
           MOVE LS-FILENAME TO WS-OUTPUT-FILENAME
           PERFORM OPEN-OUTPUT-FILE
           MOVE LS-BUFFER-DATA TO OUTPUT-RECORD
           WRITE OUTPUT-RECORD
           ADD 1 TO WS-WRITE-COUNT
           PERFORM CLOSE-FILES.

       READ-INDEXED-FILE.
           MOVE LS-FILENAME TO WS-INDEXED-FILENAME
           PERFORM OPEN-INDEXED-FILE
           MOVE LS-BUFFER-DATA(1:10) TO IDX-RECORD-KEY
           READ INDEXED-FILE KEY IS IDX-RECORD-KEY
               INVALID KEY
                   ADD 1 TO WS-ERROR-COUNT
               NOT INVALID KEY
                   ADD 1 TO WS-READ-COUNT
                   MOVE INDEXED-RECORD TO WS-BUFFER-DATA
           END-READ
           PERFORM CLOSE-FILES.

       WRITE-INDEXED-FILE.
           MOVE LS-FILENAME TO WS-INDEXED-FILENAME
           PERFORM OPEN-INDEXED-FILE
           MOVE LS-BUFFER-DATA TO INDEXED-RECORD
           WRITE INDEXED-RECORD
               INVALID KEY
                   ADD 1 TO WS-ERROR-COUNT
               NOT INVALID KEY
                   ADD 1 TO WS-WRITE-COUNT
           END-WRITE
           PERFORM CLOSE-FILES.

       PROCESS-RECORD.
           MOVE FUNCTION UPPER-CASE(WS-BUFFER-DATA) 
               TO WS-BUFFER-DATA
           INSPECT WS-BUFFER-DATA REPLACING ALL 'X' BY 'Z'.

       OPEN-INPUT-FILE.
           OPEN INPUT INPUT-FILE
           IF WS-FILE-STATUS NOT = '00'
               ADD 1 TO WS-ERROR-COUNT.

       OPEN-OUTPUT-FILE.
           OPEN OUTPUT OUTPUT-FILE
           IF WS-FILE-STATUS NOT = '00'
               ADD 1 TO WS-ERROR-COUNT.

       OPEN-INDEXED-FILE.
           OPEN I-O INDEXED-FILE
           IF WS-FILE-STATUS NOT = '00'
               OPEN OUTPUT INDEXED-FILE.

       CLOSE-FILES.
           CLOSE INPUT-FILE
           CLOSE OUTPUT-FILE
           CLOSE INDEXED-FILE.